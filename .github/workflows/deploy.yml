name: Deploy to GCP

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-south1
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  MONGODB_URL: ${{ secrets.MONGODB_URL }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  build-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create GCP Service Account Keyfile
      env:
        GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      run: |
        echo "$GCP_SERVICE_ACCOUNT_KEY" > credentials.json

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_environment_variables: true

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker gcr.io --quiet

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          gcr.io/${{ env.PROJECT_ID }}/vehicle-insurance-app:latest
          gcr.io/${{ env.PROJECT_ID }}/vehicle-insurance-app:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          DB_PASSWORD=${{ env.DB_PASSWORD }}
          DB_USERNAME=${{ env.DB_USERNAME }}
          MONGODB_URL=${{ env.MONGODB_URL }}
          MLFLOW_TRACKING_URI=${{ env.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME=${{ env.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD=${{ env.MLFLOW_TRACKING_PASSWORD }}

  deploy-infra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: build-docker
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create GCP Service Account Keyfile
      env:
        GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      run: |
        echo "$GCP_SERVICE_ACCOUNT_KEY" > credentials.json

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Terraform Init
      run: terraform init -backend-config="credentials=credentials.json"
      working-directory: ./infrastructure

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./infrastructure

    - name: Terraform Plan
      run: terraform plan -var="project_id=$PROJECT_ID" -var="region=$REGION" -var="credentials_file=credentials.json"
      if: github.event_name == 'pull_request'
      working-directory: ./infrastructure

    - name: Terraform Apply
      run: terraform apply -auto-approve -var="project_id=$PROJECT_ID" -var="region=$REGION" -var="credentials_file=credentials.json"
      if: github.ref == 'refs/heads/main'
      working-directory: ./infrastructure

    - name: Verify Deployment
      run: |
        echo "Load Balancer IP: $(terraform output -raw load_balancer_ip)"
        echo "Cloud Run URL: $(terraform output -raw cloud_run_url)"
        curl -sI http://$(terraform output -raw load_balancer_ip)/healthz
