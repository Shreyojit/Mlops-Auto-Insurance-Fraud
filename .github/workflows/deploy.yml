name: Deploy to GCP

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-south1
  TF_DIR: infrastructure/
  # Move sensitive vars to job level
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  MONGODB_URL: ${{ secrets.MONGODB_URL }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  build-docker:
    # ... unchanged build-docker job ... 

  deploy-infra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: build-docker
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create GCP Service Account Keyfile
      env:
        GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      run: |
        echo "$GCP_SERVICE_ACCOUNT_KEY" > ${{ env.TF_DIR }}/credentials.json

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_environment_variables: true

    - name: Terraform Init
      working-directory: ${{ env.TF_DIR }}
      run: |
        terraform init -backend-config="bucket=${{ env.PROJECT_ID }}-tfstate" \
                       -backend-config="prefix=terraform/state"

    - name: Terraform Validate
      working-directory: ${{ env.TF_DIR }}
      run: terraform validate

    - name: Terraform Plan
      working-directory: ${{ env.TF_DIR }}
      run: |
        terraform plan \
          -var="project_id=${{ env.PROJECT_ID }}" \
          -var="region=${{ env.REGION }}" \
          -var="service_account_email=${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}"
      if: github.event_name == 'pull_request'

    - name: Terraform Apply
      working-directory: ${{ env.TF_DIR }}
      run: |
        terraform apply -auto-approve \
          -var="project_id=${{ env.PROJECT_ID }}" \
          -var="region=${{ env.REGION }}" \
          -var="service_account_email=${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}"
      if: github.ref == 'refs/heads/main'

    - name: Verify Deployment
      working-directory: ${{ env.TF_DIR }}
      run: |
        echo "Load Balancer IP: $(terraform output -raw load_balancer_ip)"
        echo "Cloud Run URL: $(terraform output -raw cloud_run_url)"
        curl -sI http://$(terraform output -raw load_balancer_ip)/healthz